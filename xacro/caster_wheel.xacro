<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Load physics parameters -->
    <xacro:include filename="$(find barista_robot_description)/xacro/physics_properties.xacro"/>

    <!-- Caster wheel macro -->
    <xacro:macro name="caster_wheel" params="prefix x_pos robot_name">
    
    <!-- Properties -->
    <xacro:property name="wheel_radius" value="0.0352"/>
    <xacro:property name="cylinder_length" value="0.010"/>
    <!-- <xacro:property name="wheel_mass" value="0.02"/> -->
    <xacro:property name="joint_type" value="fixed"/>
    <!-- <xacro:property name="joint_type" value="continuous"/> -->

    <!-- Yaw link -->
    <link name="${prefix}_yaw_link">
        <visual>
            <geometry>
                <cylinder length="${cylinder_length}" radius="${wheel_radius}"/>
            </geometry>
            <material name="green_dark"/>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${cylinder_length}" radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${physics_config['caster_mass']}"/>
            <!-- <inertia ixx="${physics_config['caster_yr_ixx']}" ixy="0" ixz="0" 
                     iyy="${physics_config['caster_yr_iyy']}" iyz="0"
                     izz="${physics_config['caster_yr_izz']}"/> -->
            <inertia ixx="${(1/12) * physics_config['caster_mass'] * (3 * wheel_radius * wheel_radius + cylinder_length * cylinder_length)}" 
                     iyy="${(1/12) * physics_config['caster_mass'] * (3 * wheel_radius * wheel_radius + cylinder_length * cylinder_length)}" 
                     izz="${(1/2) * physics_config['caster_mass'] * wheel_radius * wheel_radius}"
                     ixy="0" ixz="0" iyz="0"/>
        </inertial>
    </link>

    <joint name="${robot_name}/${prefix}_yaw_joint" type="${joint_type}">
        <origin rpy="0 1.5707 1.5707" xyz="${x_pos} 0.0 -0.070" />
        <parent link="chassis" />
        <child link="${prefix}_yaw_link" />
        <!-- <axis xyz="0 1 0" /> -->
        <axis xyz="0 0 1 " />
        <!-- <limit effort="1000.0" velocity="100.0" /> -->
        <dynamics damping="${physics_config['caster_damping']}" 
                        friction="${physics_config['caster_friction']}"/>
    </joint> 

    <!-- Roll link -->
    <link name="${prefix}_roll_link">
        <visual>
            <geometry>
                <cylinder length="${cylinder_length}" radius="${wheel_radius}"/>
            </geometry>
            <material name="green_dark"/>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${cylinder_length}" radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${physics_config['caster_mass']}"/>
            <!-- <inertia ixx="${physics_config['caster_yr_ixx']}" ixy="0" ixz="0" 
                     iyy="${physics_config['caster_yr_iyy']}" iyz="0"
                     izz="${physics_config['caster_yr_izz']}"/> -->
            <inertia ixx="${(1/12) * physics_config['caster_mass'] * (3 * wheel_radius * wheel_radius + cylinder_length * cylinder_length)}" 
                     iyy="${(1/12) * physics_config['caster_mass'] * (3 * wheel_radius * wheel_radius + cylinder_length * cylinder_length)}" 
                     izz="${(1/2) * physics_config['caster_mass'] * wheel_radius * wheel_radius}"
                     ixy="0" ixz="0" iyz="0"/>
        </inertial>
    </link>

    <joint name="${prefix}_roll_joint" type="${joint_type}">
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0" /> 
        <parent link="${prefix}_yaw_link" />
        <child link="${prefix}_roll_link" />
        <!-- <axis xyz="1 0 0" /> -->
        <axis xyz="0 1 0" />
        <!-- <limit effort="1000.0" velocity="100.0" /> -->
        <dynamics damping="${physics_config['caster_damping']}" 
                        friction="${physics_config['caster_friction']}"/>
    </joint>

    <!-- Pitch link -->
    <link name="${prefix}_pitch_link">
        <visual>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
            <material name="green_dark"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${physics_config['caster_mass']}"/>
            <!-- <inertia ixx="${physics_config['caster_p_ixx']}" ixy="0" ixz="0" 
                     iyy="${physics_config['caster_p_iyy']}" iyz="0"
                     izz="${physics_config['caster_p_izz']}"/> -->
            <inertia ixx="${(2/5) * physics_config['caster_mass'] * wheel_radius * wheel_radius}" 
                     iyy="${(2/5) * physics_config['caster_mass'] * wheel_radius * wheel_radius}" 
                     izz="${(2/5) * physics_config['caster_mass'] * wheel_radius * wheel_radius}"
                     ixy="0" ixz="0" iyz="0"/>
        </inertial>
    </link>

    <joint name="${prefix}_pitch_joint" type="${joint_type}">
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
        <parent link="${prefix}_roll_link" />
        <child link="${prefix}_pitch_link" />
        <!-- <axis xyz="0 1 0" /> -->
        <!-- <axis xyz="0 0 1" /> -->
        <!-- Need to test this -->
        <!-- <axis xyz="1 0 0" />      -->
        <!-- <limit effort="1000.0" velocity="100.0" /> -->
        <dynamics damping="${physics_config['caster_damping']}" 
                        friction="${physics_config['caster_friction']}"/>
    </joint>

    <!-- Gazebo materials -->
    <gazebo reference="${prefix}_yaw_link">
        <material>Gazebo/Grey</material>
        <mu>${physics_config['caster_mu']}</mu> 
        <mu2>${physics_config['caster_mu']}</mu2>
        <slip1>${physics_config['caster_slip']}</slip1>
        <slip2>${physics_config['caster_slip']}</slip2>
        <kp>${physics_config['caster_kp']}</kp> 
        <kd>${physics_config['caster_kd']}</kd>
    </gazebo>
    
    <gazebo reference="${prefix}_roll_link">
        <material>Gazebo/Grey</material>
        <mu>${physics_config['caster_mu']}</mu> 
        <mu2>${physics_config['caster_mu']}</mu2>
        <slip1>${physics_config['caster_slip']}</slip1>
        <slip2>${physics_config['caster_slip']}</slip2>
        <kp>${physics_config['caster_kp']}</kp> 
        <kd>${physics_config['caster_kd']}</kd>
    </gazebo>

    <gazebo reference="${prefix}_pitch_link">
        <material>Gazebo/Grey</material>
        <mu>${physics_config['caster_mu']}</mu> 
        <mu2>${physics_config['caster_mu']}</mu2>
        <slip1>${physics_config['caster_slip']}</slip1>
        <slip2>${physics_config['caster_slip']}</slip2>
        <kp>${physics_config['caster_kp']}</kp> 
        <kd>${physics_config['caster_kd']}</kd>
    </gazebo>

  </xacro:macro>

</robot>